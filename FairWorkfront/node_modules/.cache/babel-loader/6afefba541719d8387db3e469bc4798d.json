{"ast":null,"code":"import * as types from \"../actions/actionTypes\";\nimport initialState from \"./initialState\";\nexport default function dictionariesReducer(state = initialState.employers, action) {\n  switch (action.type) {\n    case types.ADD_EMPLOYER:\n      return [...state, action.employer];\n\n    case types.ADD_REVIEW:\n      const selectedEmployer = state.filter(emp => emp === action.emp);\n      selectedEmployer.reviews.push(action.review);\n      return state.map(employer => {\n        if (employer.name === selectedEmployer.name) {\n          return selectedEmployer;\n        }\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/jack/Projects/hackathon_reuters/hackathon-t-reuters-fe/src/redux/reducers/employersReducer.js"],"names":["types","initialState","dictionariesReducer","state","employers","action","type","ADD_EMPLOYER","employer","ADD_REVIEW","selectedEmployer","filter","emp","reviews","push","review","map","name"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,eAAe,SAASC,mBAAT,CAA6BC,KAAK,GAAGF,YAAY,CAACG,SAAlD,EAA6DC,MAA7D,EAAqE;AAClF,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,KAAK,CAACO,YAAX;AACE,aAAO,CAAC,GAAGJ,KAAJ,EAAUE,MAAM,CAACG,QAAjB,CAAP;;AACF,SAAKR,KAAK,CAACS,UAAX;AACA,YAAMC,gBAAgB,GAAGP,KAAK,CAACQ,MAAN,CAAaC,GAAG,IAAIA,GAAG,KAAGP,MAAM,CAACO,GAAjC,CAAzB;AACAF,MAAAA,gBAAgB,CAACG,OAAjB,CAAyBC,IAAzB,CAA8BT,MAAM,CAACU,MAArC;AACA,aAAOZ,KAAK,CAACa,GAAN,CAAWR,QAAD,IAAc;AAC3B,YAAGA,QAAQ,CAACS,IAAT,KAAiBP,gBAAgB,CAACO,IAArC,EACA;AACE,iBAAOP,gBAAP;AACD;AACF,OALI,CAAP;;AAMA;AACE,aAAOP,KAAP;AAbJ;AAeD","sourcesContent":["import * as types from \"../actions/actionTypes\";\nimport initialState from \"./initialState\";\n\nexport default function dictionariesReducer(state = initialState.employers, action) {\n  switch (action.type) {\n    case types.ADD_EMPLOYER:\n      return [...state,action.employer];\n    case types.ADD_REVIEW:\n    const selectedEmployer = state.filter(emp => emp===action.emp);\n    selectedEmployer.reviews.push(action.review)\n    return state.map((employer) => {\n        if(employer.name=== selectedEmployer.name)\n        {\n          return selectedEmployer;\n        }\n      })\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
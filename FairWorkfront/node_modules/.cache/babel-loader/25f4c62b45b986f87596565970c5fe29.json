{"ast":null,"code":"import * as types from \"../actions/actionTypes\";\nimport initialState from \"./initialState\";\nexport default function employersReducer(state = initialState.employers, action) {\n  switch (action.type) {\n    case types.LOAD_EMPLOYER_SUCCESS:\n      return action.employers;\n\n    case types.ADD_EMPLOYER_SUCCESS:\n      return [...state, action.employer];\n\n    case types.UPDATE_EMPLOYER_SUCCESS:\n      return state.map(emp => {\n        if (emp.name === action.employer.name) return action.employer;\n      });\n\n    /* case types.ADD_REVIEW:\n    const selectedEmployer = state.filter(emp => emp===action.emp);\n    selectedEmployer.reviews.push(action.review)\n    return {...state,selectedEmployer} */\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/jack/Projects/hackathon_reuters/hackathon-t-reuters-fe/src/redux/reducers/employersReducer.js"],"names":["types","initialState","employersReducer","state","employers","action","type","LOAD_EMPLOYER_SUCCESS","ADD_EMPLOYER_SUCCESS","employer","UPDATE_EMPLOYER_SUCCESS","map","emp","name"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAAK,GAAGF,YAAY,CAACG,SAA/C,EAA0DC,MAA1D,EAAkE;AAC/E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,KAAK,CAACO,qBAAX;AACE,aAAOF,MAAM,CAACD,SAAd;;AACF,SAAKJ,KAAK,CAACQ,oBAAX;AACE,aAAO,CAAC,GAAGL,KAAJ,EAAUE,MAAM,CAACI,QAAjB,CAAP;;AACF,SAAKT,KAAK,CAACU,uBAAX;AACE,aAAOP,KAAK,CAACQ,GAAN,CAAUC,GAAG,IAAI;AACtB,YAAGA,GAAG,CAACC,IAAJ,KAAaR,MAAM,CAACI,QAAP,CAAgBI,IAAhC,EACA,OAAOR,MAAM,CAACI,QAAd;AACD,OAHM,CAAP;;AAIF;;;;;AAIA;AACE,aAAON,KAAP;AAfJ;AAiBD","sourcesContent":["import * as types from \"../actions/actionTypes\";\nimport initialState from \"./initialState\";\n\nexport default function employersReducer(state = initialState.employers, action) {\n  switch (action.type) {\n    case types.LOAD_EMPLOYER_SUCCESS:\n      return action.employers\n    case types.ADD_EMPLOYER_SUCCESS:\n      return [...state,action.employer];\n    case types.UPDATE_EMPLOYER_SUCCESS:\n      return state.map(emp => {\n        if(emp.name === action.employer.name)\n        return action.employer\n      })\n    /* case types.ADD_REVIEW:\n    const selectedEmployer = state.filter(emp => emp===action.emp);\n    selectedEmployer.reviews.push(action.review)\n    return {...state,selectedEmployer} */\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}
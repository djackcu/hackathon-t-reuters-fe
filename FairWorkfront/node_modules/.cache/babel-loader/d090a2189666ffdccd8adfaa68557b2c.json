{"ast":null,"code":"import _defineProperty from \"/home/jack/Projects/hackathon_reuters/hackathon-t-reuters-fe/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from \"../actions/actionTypes\";\nimport initialState from \"./initialState\";\nexport default function dictionariesReducer(state = initialState.employers, action) {\n  switch (action.type) {\n    case types.ADD_EMPLOYER:\n      return [...state, action.employer];\n\n    case types.ADD_REVIEW:\n      const selectedEmployer = state.filter(emp => emp === action.emp);\n      selectedEmployer.reviews.push(action.review);\n      return _objectSpread({}, state, {\n        selectedEmployer\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/jack/Projects/hackathon_reuters/hackathon-t-reuters-fe/src/redux/reducers/employersReducer.js"],"names":["types","initialState","dictionariesReducer","state","employers","action","type","ADD_EMPLOYER","employer","ADD_REVIEW","selectedEmployer","filter","emp","reviews","push","review"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,wBAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,eAAe,SAASC,mBAAT,CAA6BC,KAAK,GAAGF,YAAY,CAACG,SAAlD,EAA6DC,MAA7D,EAAqE;AAClF,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,KAAK,CAACO,YAAX;AACE,aAAO,CAAC,GAAGJ,KAAJ,EAAUE,MAAM,CAACG,QAAjB,CAAP;;AACF,SAAKR,KAAK,CAACS,UAAX;AACA,YAAMC,gBAAgB,GAAGP,KAAK,CAACQ,MAAN,CAAaC,GAAG,IAAIA,GAAG,KAAGP,MAAM,CAACO,GAAjC,CAAzB;AACAF,MAAAA,gBAAgB,CAACG,OAAjB,CAAyBC,IAAzB,CAA8BT,MAAM,CAACU,MAArC;AACA,+BAAWZ,KAAX;AAAiBO,QAAAA;AAAjB;;AACA;AACE,aAAOP,KAAP;AARJ;AAUD","sourcesContent":["import * as types from \"../actions/actionTypes\";\nimport initialState from \"./initialState\";\n\nexport default function dictionariesReducer(state = initialState.employers, action) {\n  switch (action.type) {\n    case types.ADD_EMPLOYER:\n      return [...state,action.employer];\n    case types.ADD_REVIEW:\n    const selectedEmployer = state.filter(emp => emp===action.emp);\n    selectedEmployer.reviews.push(action.review)\n    return {...state,selectedEmployer}\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}